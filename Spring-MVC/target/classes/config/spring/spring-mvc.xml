<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:tx="http://www.springframework.org/schema/tx"	 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<context:component-scan base-package="kr.kedu.java01.spms"/>
	<context:property-placeholder
			location="classpath:config/mybatis/db.properties"/>
			
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		  destroy-method="close"
      	  p:driverClassName="${oracle.driver}"
          p:url="${oracle.url}"
          p:username="${oracle.username}" 
          p:password="${oracle.password}" /> <!-- 커넥션풀 dbcp2 추가-->
          
    <bean id="sqlSessionFactory" 
	class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="configLocation" 
	value="classpath:config/mybatis/mybatis-config.xml"/>
	<!-- typeAliasePackage는 자동으로  spms.vo 밑에있는 
		클래스들을 클래스 명으로 별명등록을 해줍니다. 
		spms.vo.MemberVO -> memberVO로 등록 
	-->
	</bean>
	
	<!-- sqlSessionTemplate는 스프링에서 제공하는 
	sqlSession 입니다.  -->
	<bean id="sqlSessionTemplate"
	class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!-- 트랜잭션 처리
	 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
        
    <!-- 스프링에서 제공하는 인코딩 @어노테이션을 통해서 메시지를 주고 받을때
    	인코딩 형식을 지정 -->
   <mvc:annotation-driven>
        <!-- @ResponseBody로 String 처리할때 한글처리 -->
	    <mvc:message-converters>
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	            <property name="supportedMediaTypes">
	                <list>
	                    <value>text/html; charset=UTF-8</value>
	                </list>
	            </property>
	        </bean>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="supportedMediaTypes">
	                <list>
	                    <value>text/html; charset=UTF-8</value>
	                    <value>application/json; charset=UTF-8</value>
	                </list>
	            </property>
	        </bean>
	    </mvc:message-converters>
    </mvc:annotation-driven>
    
	<!-- 최대 업로드 파일 사이즈 : 10MB -->
    <bean id="multipartResolver" 
   	      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" /> 
	</bean>
	<mvc:default-servlet-handler />
	  
		
		<!-- Spring mvc 사용하는데 필수 적인 설정 jsp 파일을 만들땐 view폴더에다가 반드시만들어아함
		suffix는 jsp 확장자를 부를때 .jsp를 생략하는부분-->
	<mvc:view-resolvers>
		<mvc:jsp prefix="/WEB-INF/view/" suffix=".jsp" />
	</mvc:view-resolvers>
	
</beans>